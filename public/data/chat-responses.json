{
  "version": "1.0",
  "lastUpdated": "2025-07-25",
  "description": "Preset AI responses for Multi-Task Challenge research study",
  "triggerLogic": {
    "description": "When multiple triggers match, select response with highest frequency match. If tied, select randomly.",
    "example": "Input 'how to create a counting strategy' matches 'how'(1), 'create'(1), 'counting'(1), 'strategy'(1)"
  },
  "responses": {
    "counting": {
      "workflow": {
        "make_for_me": [
          {
            "id": "c-w-make-1",
            "response": "I'll create a counting system for you: 1) Scan for pattern density, 2) Count in chunks, 3) Double-check edges. Tasks affect each other - try different orders!",
            "triggers": ["create", "make", "build", "design", "system", "counting"],
            "priority": 1
          },
          {
            "id": "c-w-make-2",
            "response": "Here's a counting workflow: Mark found items → Track systematically → Verify total. Remember: completing other games first might reveal helpful features!",
            "triggers": ["workflow", "plan", "structure", "organize", "approach"],
            "priority": 1
          },
          {
            "id": "c-w-make-3",
            "response": "Generated strategy: For words, match exact boundaries. For letters, scan all positions. Task order impacts difficulty - experiment!",
            "triggers": ["generate", "strategy", "method", "technique", "process"],
            "priority": 1
          }
        ],
        "find_for_me": [
          {
            "id": "c-w-find-1",
            "response": "Counting rules: Words need exact matches ('the' ≠ 'therefore'). Letters are case-insensitive. Some tasks might highlight targets!",
            "triggers": ["what", "rules", "how", "work", "explain"],
            "priority": 1
          },
          {
            "id": "c-w-find-2",
            "response": "Key info: Easy = common words, Medium = single letters, Hard = two letters combined. Other completed tasks can add visual aids!",
            "triggers": ["difficulty", "level", "different", "which", "type"],
            "priority": 1
          },
          {
            "id": "c-w-find-3",
            "response": "Facts: All counting is case-insensitive for letters. Word boundaries matter. Check if slider tasks were completed - they might help!",
            "triggers": ["fact", "information", "detail", "specific", "tell"],
            "priority": 1
          }
        ],
        "jumpstart_for_me": [
          {
            "id": "c-w-jump-1",
            "response": "Start here: First read the target carefully, then scan the text once for overview. Other tasks might add highlighting - try different sequences!",
            "triggers": ["start", "begin", "first", "initial", "where"],
            "priority": 1
          },
          {
            "id": "c-w-jump-2",
            "response": "To begin: Identify if counting words or letters → Choose a systematic path → Mark progress. Task dependencies can simplify this!",
            "triggers": ["how start", "begin with", "first step", "initiate"],
            "priority": 2
          },
          {
            "id": "c-w-jump-3",
            "response": "Quick start: For efficiency, complete slider tasks first - they might activate helpful features for counting!",
            "triggers": ["quick", "fast", "efficient", "best way"],
            "priority": 1
          }
        ],
        "iterate_with_me": [
          {
            "id": "c-w-iter-1",
            "response": "Getting inconsistent counts? Try: Mark found items, count in sections, sum totals. Or complete other tasks first for assistance!",
            "triggers": ["wrong", "incorrect", "mistake", "error", "different"],
            "priority": 1
          },
          {
            "id": "c-w-iter-2",
            "response": "To improve: Use finger/cursor tracking, subvocalize while counting, double-check boundaries. Task order dramatically affects difficulty!",
            "triggers": ["improve", "better", "enhance", "optimize", "refine"],
            "priority": 1
          },
          {
            "id": "c-w-iter-3",
            "response": "Stuck? Consider switching to slider/typing first - they might unlock features that make counting easier. Experiment with sequences!",
            "triggers": ["stuck", "help", "difficult", "hard", "struggling"],
            "priority": 1
          }
        ]
      },
      "task": {
        "make_for_me": [
          {
            "id": "c-t-make-1",
            "response": "Count like this: Left→right, line by line. Mark each found instance. Don't skip punctuation areas!",
            "triggers": ["count", "how count", "counting method", "way"],
            "priority": 2
          },
          {
            "id": "c-t-make-2",
            "response": "For letters: Check every position including starts/ends of words. For two letters: count separately then add.",
            "triggers": ["letter", "character", "two", "both", "add"],
            "priority": 1
          },
          {
            "id": "c-t-make-3",
            "response": "Word counting tip: 'The' appears in 'The', not in 'These' or 'Other'. Check spacing carefully!",
            "triggers": ["word", "the", "of", "and", "boundary"],
            "priority": 1
          }
        ],
        "find_for_me": [
          {
            "id": "c-t-find-1",
            "response": "Current task: Count the target shown above the text. Case doesn't matter for letters. Exact match for words.",
            "triggers": ["what count", "target", "looking for", "supposed"],
            "priority": 2
          },
          {
            "id": "c-t-find-2",
            "response": "Text info: ~50-80 words per passage. Common words appear 3-10 times. Letters vary widely.",
            "triggers": ["how many", "range", "typical", "usually", "expect"],
            "priority": 1
          },
          {
            "id": "c-t-find-3",
            "response": "Remember: Spaces and punctuation separate words. 'Berkeley' and 'Berkeley,' are the same word.",
            "triggers": ["space", "punctuation", "comma", "period", "same"],
            "priority": 1
          }
        ],
        "jumpstart_for_me": [
          {
            "id": "c-t-jump-1",
            "response": "Begin at the first word. Read carefully - don't skim. Mental highlighting helps track progress.",
            "triggers": ["where start", "begin where", "first word"],
            "priority": 2
          },
          {
            "id": "c-t-jump-2",
            "response": "Start by understanding your target. Is it a word or letter(s)? This determines your scanning strategy.",
            "triggers": ["first", "initially", "to start", "beginning"],
            "priority": 1
          },
          {
            "id": "c-t-jump-3",
            "response": "Quick tip: If text seems highlighted, you've unlocked a helper feature from another task!",
            "triggers": ["highlight", "yellow", "marked", "visual", "see"],
            "priority": 1
          }
        ],
        "iterate_with_me": [
          {
            "id": "c-t-iter-1",
            "response": "Recount using: Finger pointing, subvocalization, or section-by-section verification.",
            "triggers": ["recount", "verify", "check", "confirm", "sure"],
            "priority": 1
          },
          {
            "id": "c-t-iter-2",
            "response": "Common error: Missing letters at word edges or in punctuation clusters. Slow down there!",
            "triggers": ["miss", "skip", "overlook", "forget", "edge"],
            "priority": 1
          },
          {
            "id": "c-t-iter-3",
            "response": "If consistently wrong: You might be counting too fast. Accuracy matters more than speed here.",
            "triggers": ["always wrong", "keep missing", "never right"],
            "priority": 2
          }
        ]
      }
    },
    "slider": {
      "workflow": {
        "make_for_me": [
          {
            "id": "s-w-make-1",
            "response": "I'll create a slider strategy: 1) Start at endpoints to gauge range, 2) Binary search to target zone, 3) Fine-tune. Typing tasks might enhance your slider!",
            "triggers": ["create", "make", "strategy", "system", "approach"],
            "priority": 1
          },
          {
            "id": "s-w-make-2",
            "response": "Slider system: Use landmarks (0, 5, 10) → Estimate target position → Adjust incrementally. Task order affects available features!",
            "triggers": ["design", "build", "develop", "plan", "method"],
            "priority": 1
          },
          {
            "id": "s-w-make-3",
            "response": "Generated workflow: For decimals, think in percentages. For hidden values, count clicks from 0. Other tasks might add helpful scales!",
            "triggers": ["workflow", "process", "technique", "generate"],
            "priority": 1
          }
        ],
        "find_for_me": [
          {
            "id": "s-w-find-1",
            "response": "Slider mechanics: Easy = integers 0-10, Medium = one decimal, Hard = two decimals + hidden value. Typing tasks can unlock enhancements!",
            "triggers": ["how", "work", "mechanic", "function", "operate"],
            "priority": 1
          },
          {
            "id": "s-w-find-2",
            "response": "Key fact: You need 90%+ accuracy to pass. That's ±0.5 for easy, ±0.05 for medium, ±0.005 for hard.",
            "triggers": ["accuracy", "precise", "exact", "close", "threshold"],
            "priority": 1
          },
          {
            "id": "s-w-find-3",
            "response": "Info: Slider shows current value (except hard mode). Some completed tasks add visual guides - experiment with order!",
            "triggers": ["show", "display", "see", "value", "number"],
            "priority": 1
          }
        ],
        "jumpstart_for_me": [
          {
            "id": "s-w-jump-1",
            "response": "Start by moving slider to 0, then to 10, to feel the range. Then jump to approximate target zone. Completed typing tasks might help!",
            "triggers": ["start", "begin", "first", "initial"],
            "priority": 1
          },
          {
            "id": "s-w-jump-2",
            "response": "Begin here: Set to midpoint (5) → Compare to target → Move halfway to target → Repeat. Visual aids might appear from other tasks!",
            "triggers": ["where start", "how begin", "first move"],
            "priority": 2
          },
          {
            "id": "s-w-jump-3",
            "response": "Quick start: Complete typing tasks first - they often unlock slider enhancements that make precision easier!",
            "triggers": ["quick", "fast", "efficient", "best"],
            "priority": 1
          }
        ],
        "iterate_with_me": [
          {
            "id": "s-w-iter-1",
            "response": "Can't get precise? Try: Smaller movements near target, use keyboard arrows if available, or complete other tasks first!",
            "triggers": ["imprecise", "inaccurate", "wrong", "miss"],
            "priority": 1
          },
          {
            "id": "s-w-iter-2",
            "response": "Improve accuracy: Make large moves first, then progressively smaller. Task dependencies might add helpful markers!",
            "triggers": ["improve", "better", "enhance", "accurate"],
            "priority": 1
          },
          {
            "id": "s-w-iter-3",
            "response": "For hard mode: Count clicks from 0 to estimate position. Or try completing typing tasks first for potential aids!",
            "triggers": ["hard", "difficult", "hidden", "blind", "can't see"],
            "priority": 1
          }
        ]
      },
      "task": {
        "make_for_me": [
          {
            "id": "s-t-make-1",
            "response": "Move slider using: Click and drag, or click on track for jumps. Small movements near target work best.",
            "triggers": ["move", "drag", "control", "adjust"],
            "priority": 1
          },
          {
            "id": "s-t-make-2",
            "response": "For decimals: Each tiny movement = 0.1 (medium) or 0.01 (hard). Move slowly when close!",
            "triggers": ["decimal", "point", "precise", "small"],
            "priority": 1
          },
          {
            "id": "s-t-make-3",
            "response": "Matching technique: Overshoot slightly, then back up. Often more accurate than creeping up slowly.",
            "triggers": ["match", "reach", "hit", "get to"],
            "priority": 1
          }
        ],
        "find_for_me": [
          {
            "id": "s-t-find-1",
            "response": "Current precision: This task needs 0.1 increments. The display shows your current value below.",
            "triggers": ["precision", "increment", "step", "unit"],
            "priority": 1
          },
          {
            "id": "s-t-find-2",
            "response": "Target is shown in green above slider. Match as closely as possible - within 10% error to pass.",
            "triggers": ["target", "goal", "number", "green"],
            "priority": 1
          },
          {
            "id": "s-t-find-3",
            "response": "Value display: Shows current position except in hard mode. Hard mode shows '??' instead.",
            "triggers": ["display", "show", "question mark", "??"],
            "priority": 1
          }
        ],
        "jumpstart_for_me": [
          {
            "id": "s-t-jump-1",
            "response": "First: Note target value. Then click near expected position on track. Fine-tune from there.",
            "triggers": ["first", "start", "begin", "initial"],
            "priority": 1
          },
          {
            "id": "s-t-jump-2",
            "response": "Start at 0 or 10 (whichever is closer to target), then work inward. Easier than starting from middle.",
            "triggers": ["where", "position", "begin where"],
            "priority": 2
          },
          {
            "id": "s-t-jump-3",
            "response": "Begin by checking if scale marks are visible - enhanced sliders have these from completed typing tasks!",
            "triggers": ["scale", "marks", "enhanced", "visual"],
            "priority": 1
          }
        ],
        "iterate_with_me": [
          {
            "id": "s-t-iter-1",
            "response": "Too sensitive? Try clicking on track instead of dragging. Or use arrow keys for fine control.",
            "triggers": ["sensitive", "jumpy", "fast", "overshot"],
            "priority": 1
          },
          {
            "id": "s-t-iter-2",
            "response": "For blind mode: Remember each full drag ≈ 10 units. Count movements from edges.",
            "triggers": ["blind", "hidden", "no value", "can't see"],
            "priority": 1
          },
          {
            "id": "s-t-iter-3",
            "response": "Still struggling? The slider might be easier after completing other tasks. Try a different sequence!",
            "triggers": ["still", "struggling", "can't", "impossible"],
            "priority": 1
          }
        ]
      }
    },
    "typing": {
      "workflow": {
        "make_for_me": [
          {
            "id": "t-w-make-1",
            "response": "I'll create a typing system: 1) Memorize in chunks, 2) Type in bursts, 3) Verify each chunk. Counting tasks might simplify patterns!",
            "triggers": ["create", "make", "system", "method"],
            "priority": 1
          },
          {
            "id": "t-w-make-2",
            "response": "Typing workflow: Read pattern → Break into segments → Type carefully → Double-check. Task order affects pattern difficulty!",
            "triggers": ["workflow", "plan", "approach", "strategy"],
            "priority": 1
          },
          {
            "id": "t-w-make-3",
            "response": "Generated strategy: For symbols, use mental word associations. For mixed case, type slowly. Other tasks might give easier patterns!",
            "triggers": ["generate", "design", "build", "develop"],
            "priority": 1
          }
        ],
        "find_for_me": [
          {
            "id": "t-w-find-1",
            "response": "Pattern types: Easy = lowercase words, Medium = mixed case + numbers, Hard = symbols included. Counting tasks can simplify these!",
            "triggers": ["type", "pattern", "difficulty", "level"],
            "priority": 1
          },
          {
            "id": "t-w-find-2",
            "response": "Exact match required: Every character, space, and symbol must match perfectly. Case sensitivity is enforced!",
            "triggers": ["exact", "match", "perfect", "sensitive"],
            "priority": 1
          },
          {
            "id": "t-w-find-3",
            "response": "Info: Patterns are 10-15 characters typically. Completing counting tasks first might unlock simpler patterns!",
            "triggers": ["how long", "length", "characters", "size"],
            "priority": 1
          }
        ],
        "jumpstart_for_me": [
          {
            "id": "t-w-jump-1",
            "response": "Start by reading the full pattern twice. Then type the first word/segment. Build momentum gradually!",
            "triggers": ["start", "begin", "first", "initial"],
            "priority": 1
          },
          {
            "id": "t-w-jump-2",
            "response": "Begin here: Check if pattern looks simpler than expected - you might have unlocked easy mode from other tasks!",
            "triggers": ["where start", "how begin", "first step"],
            "priority": 2
          },
          {
            "id": "t-w-jump-3",
            "response": "Quick tip: Complete counting tasks first - they often trigger simpler typing patterns. Experiment with order!",
            "triggers": ["quick", "tip", "efficient", "best"],
            "priority": 1
          }
        ],
        "iterate_with_me": [
          {
            "id": "t-w-iter-1",
            "response": "Keep mistyping? Slow down, type each character deliberately. Or try completing counting tasks for easier patterns!",
            "triggers": ["mistype", "error", "wrong", "mistake"],
            "priority": 1
          },
          {
            "id": "t-w-iter-2",
            "response": "To improve: Use proper finger positioning, don't look at keyboard, type rhythmically. Task order matters significantly!",
            "triggers": ["improve", "better", "enhance", "accurate"],
            "priority": 1
          },
          {
            "id": "t-w-iter-3",
            "response": "Symbols tough? Create mental associations: @ = at, # = hash. Or complete other tasks first for simpler patterns!",
            "triggers": ["symbol", "special", "hard", "difficult", "@", "#", "$"],
            "priority": 1
          }
        ]
      },
      "task": {
        "make_for_me": [
          {
            "id": "t-t-make-1",
            "response": "Type exactly as shown. Every space, capital, and symbol matters. No autocorrect here!",
            "triggers": ["type", "enter", "input", "write"],
            "priority": 1
          },
          {
            "id": "t-t-make-2",
            "response": "For mixed case: Hold shift for capitals. Release for lowercase. Type deliberately to avoid errors.",
            "triggers": ["capital", "case", "upper", "lower", "shift"],
            "priority": 1
          },
          {
            "id": "t-t-make-3",
            "response": "Symbol typing: Shift + number keys for most symbols. Take your time with these!",
            "triggers": ["symbol", "special", "character", "shift"],
            "priority": 1
          }
        ],
        "find_for_me": [
          {
            "id": "t-t-find-1",
            "response": "Pattern shown above input box. Must match 100% - every character, space, and case exactly.",
            "triggers": ["where", "pattern", "shown", "see"],
            "priority": 1
          },
          {
            "id": "t-t-find-2",
            "response": "This difficulty uses: Mixed case letters and numbers. Watch for capital letters carefully!",
            "triggers": ["what type", "difficulty", "includes"],
            "priority": 1
          },
          {
            "id": "t-t-find-3",
            "response": "No partial credit - must be perfect match. Even one wrong character = retry needed.",
            "triggers": ["partial", "close", "almost", "credit"],
            "priority": 1
          }
        ],
        "jumpstart_for_me": [
          {
            "id": "t-t-jump-1",
            "response": "First: Study the pattern. Notice capitals, spaces, symbols. Then position hands properly.",
            "triggers": ["first", "start", "begin", "prepare"],
            "priority": 1
          },
          {
            "id": "t-t-jump-2",
            "response": "Begin with first character. Type slowly but steadily. Speed isn't scored - only accuracy!",
            "triggers": ["where begin", "first character", "start where"],
            "priority": 2
          },
          {
            "id": "t-t-jump-3",
            "response": "Check pattern difficulty - if it's all lowercase, you've unlocked easy mode from another task!",
            "triggers": ["easy", "simple", "lowercase", "changed"],
            "priority": 1
          }
        ],
        "iterate_with_me": [
          {
            "id": "t-t-iter-1",
            "response": "Common mistake: Missing spaces or wrong case. Double-check these specifically!",
            "triggers": ["mistake", "common", "miss", "wrong"],
            "priority": 1
          },
          {
            "id": "t-t-iter-2",
            "response": "Can't match pattern? Try typing in segments. Verify each part before continuing.",
            "triggers": ["can't match", "impossible", "too hard"],
            "priority": 1
          },
          {
            "id": "t-t-iter-3",
            "response": "Pattern too complex? Other tasks might unlock simpler ones. Try different completion orders!",
            "triggers": ["complex", "complicated", "difficult", "easier"],
            "priority": 1
          }
        ]
      }
    }
  },
  "general": {
    "navigation": [
      {
        "id": "gen-nav-1",
        "response": "You can switch between any unlocked tasks. Each game unlocks sequentially within itself. Task order affects difficulty!",
        "triggers": ["switch", "change", "navigate", "move", "different task"],
        "priority": 2
      },
      {
        "id": "gen-nav-2",
        "response": "Complete tasks in any order! Each completion = +1 prompt. Strategic ordering can unlock helpful features!",
        "triggers": ["order", "sequence", "which first", "best order"],
        "priority": 2
      },
      {
        "id": "gen-nav-3",
        "response": "Navigation tip: Try different sequences. Some tasks make others easier when completed first!",
        "triggers": ["tip", "navigation", "strategy", "help with order"],
        "priority": 1
      }
    ],
    "prompts": [
      {
        "id": "gen-prompt-1",
        "response": "You have 3 base prompts + 1 per completed task. Use wisely - save for when truly stuck!",
        "triggers": ["prompt", "how many", "limit", "question"],
        "priority": 2
      },
      {
        "id": "gen-prompt-2",
        "response": "Earn more prompts by completing tasks. Each task = +1 prompt. Maximum 12 prompts possible!",
        "triggers": ["more prompts", "earn", "get prompts", "additional"],
        "priority": 2
      },
      {
        "id": "gen-prompt-3",
        "response": "Prompt strategy: Save them for hard tasks. Easy tasks are solvable without AI help!",
        "triggers": ["when use", "save prompts", "prompt strategy"],
        "priority": 1
      }
    ],
    "dependencies": [
      {
        "id": "gen-dep-1",
        "response": "Tasks affect each other! Completing one might add features to others. Experiment with different orders!",
        "triggers": ["affect", "influence", "dependency", "connection", "relate"],
        "priority": 2
      },
      {
        "id": "gen-dep-2",
        "response": "Hidden connections exist between games. Higher numbered tasks have stronger effects. Order matters significantly!",
        "triggers": ["hidden", "connection", "between", "games affect"],
        "priority": 2
      },
      {
        "id": "gen-dep-3",
        "response": "Pro tip: Slider→Counting, Typing→Slider, Counting→Typing. Each helps the next in unique ways!",
        "triggers": ["which helps", "best sequence", "optimal order"],
        "priority": 2
      }
    ],
    "difficulty": [
      {
        "id": "gen-diff-1",
        "response": "Each game has 3 difficulty levels. Task 1 = Easy, Task 2 = Medium, Task 3 = Hard. But order affects actual difficulty!",
        "triggers": ["difficulty", "easy medium hard", "levels"],
        "priority": 1
      },
      {
        "id": "gen-diff-2",
        "response": "Struggling with hard tasks? Try completing other games first - they might unlock helpful features!",
        "triggers": ["too hard", "difficult", "struggling", "easier"],
        "priority": 2
      }
    ]
  },
  "fallback": [
    {
      "id": "fallback-1",
      "response": "I'm not sure I understand. Ask about counting, slider, or typing tasks. Remember: task order matters!",
      "triggers": [],
      "context": "unclear"
    },
    {
      "id": "fallback-2",
      "response": "Let's focus on the current task. Need help with specific game mechanics? Each completed task = +1 prompt!",
      "triggers": [],
      "context": "off-topic"
    },
    {
      "id": "fallback-3",
      "response": "Try asking about: task strategies, navigation, or how tasks connect. Save prompts for when you're truly stuck!",
      "triggers": [],
      "context": "vague"
    },
    {
      "id": "fallback-4",
      "response": "Focus on your current task first. Complete it to earn another prompt! Tasks influence each other - experiment!",
      "triggers": [],
      "context": "general"
    }
  ],
  "metadata": {
    "totalResponses": 72,
    "responsesPerGame": 24,
    "categoriesPerLevel": 4,
    "responsesPerCategory": 3,
    "designPrinciples": [
      "Responses hint at task dependencies without revealing specifics",
      "Encourage experimentation with task order",
      "Remind users about prompt economy",
      "Keep responses concise and actionable",
      "Balance helpfulness with research goals"
    ]
  }
}